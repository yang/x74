// @ts-nocheck
/* eslint-disable */
/* tslint:disable */
/* prettier-ignore-start */

/** @jsxRuntime classic */
/** @jsx createPlasmicElementProxy */
/** @jsxFrag React.Fragment */

// This class is auto-generated by Plasmic; please do not edit!
// Plasmic Project: 8evnTWPVwZ7FqJMVwJ5kQX
// Component: FxMJbYBreJCwJ
import * as React from "react";

import Head from "next/head";
import Link, { LinkProps } from "next/link";

import * as p from "@plasmicapp/react-web";
import * as ph from "@plasmicapp/host";

import {
  hasVariant,
  classNames,
  wrapWithClassName,
  createPlasmicElementProxy,
  makeFragment,
  MultiChoiceArg,
  SingleBooleanChoiceArg,
  SingleChoiceArg,
  pick,
  omit,
  useTrigger,
  StrictProps,
  deriveRenderOpts,
  ensureGlobalVariants
} from "@plasmicapp/react-web";
import CasinoStrip from "../../CasinoStrip"; // plasmic-import: -myEglF4GANrLY/component
import CasinoStripPop from "../../CasinoStripPop"; // plasmic-import: vzrgKhto_QQx6N/component

import { useScreenVariants as useScreenVariantsnwCq1TNqK1ZjKa } from "./PlasmicGlobalVariant__Screen"; // plasmic-import: NWCq1TNqK1ZjKa/globalVariant

import "@plasmicapp/react-web/lib/plasmic.css";

import projectcss from "./plasmic_copy_of_copy_of_cbn_components.module.css"; // plasmic-import: 8evnTWPVwZ7FqJMVwJ5kQX/projectcss
import sty from "./PlasmicHomepage.module.css"; // plasmic-import: FxMJbYBreJCwJ/css

import Frame1593Icon from "./icons/PlasmicIcon__Frame1593"; // plasmic-import: 90uvfieAr7FyhJ/icon

export type PlasmicHomepage__VariantMembers = {};

export type PlasmicHomepage__VariantsArgs = {};
type VariantPropType = keyof PlasmicHomepage__VariantsArgs;
export const PlasmicHomepage__VariantProps = new Array<VariantPropType>();

export type PlasmicHomepage__ArgsType = {
  children?: React.ReactNode;
  slot?: React.ReactNode;
  slot2?: React.ReactNode;
  bonusLine1?: React.ReactNode;
  bonusLine2?: React.ReactNode;
  bonusLine3?: React.ReactNode;
  bonusLine4?: React.ReactNode;
  slot7?: React.ReactNode;
  slot8?: React.ReactNode;
  _247OnlineAssistance2?: React.ReactNode;
  _247OnlineAssistance4?: React.ReactNode;
  _247OnlineAssistance6?: React.ReactNode;
  slot20?: React.ReactNode;
  slot21?: React.ReactNode;
  slot22?: React.ReactNode;
  bonusInfo?: React.ReactNode;
  bonusCode?: React.ReactNode;
  maxCash?: React.ReactNode;
  wager?: React.ReactNode;
  gameTypePic?: React.ReactNode;
  gameType?: React.ReactNode;
  gameTypePic2?: React.ReactNode;
  gameType2?: React.ReactNode;
  gameTypePic3?: React.ReactNode;
  gameType3?: React.ReactNode;
  gameTypePic4?: React.ReactNode;
  gameType4?: React.ReactNode;
  providerLogo?: React.ReactNode;
  providerLogo2?: React.ReactNode;
  providerLogo3?: React.ReactNode;
  providerLogo4?: React.ReactNode;
  providerLogo5?: React.ReactNode;
  providerLogo6?: React.ReactNode;
  providerLogo7?: React.ReactNode;
  providerLogo8?: React.ReactNode;
  casinoInfo?: React.ReactNode;
  playnowBtn?: React.ReactNode;
};

type ArgPropType = keyof PlasmicHomepage__ArgsType;
export const PlasmicHomepage__ArgProps = new Array<ArgPropType>(
  "children",
  "slot",
  "slot2",
  "bonusLine1",
  "bonusLine2",
  "bonusLine3",
  "bonusLine4",
  "slot7",
  "slot8",
  "_247OnlineAssistance2",
  "_247OnlineAssistance4",
  "_247OnlineAssistance6",
  "slot20",
  "slot21",
  "slot22",
  "bonusInfo",
  "bonusCode",
  "maxCash",
  "wager",
  "gameTypePic",
  "gameType",
  "gameTypePic2",
  "gameType2",
  "gameTypePic3",
  "gameType3",
  "gameTypePic4",
  "gameType4",
  "providerLogo",
  "providerLogo2",
  "providerLogo3",
  "providerLogo4",
  "providerLogo5",
  "providerLogo6",
  "providerLogo7",
  "providerLogo8",
  "casinoInfo",
  "playnowBtn"
);

export type PlasmicHomepage__OverridesType = {
  root?: p.Flex<"div">;
  casinoStrip?: p.Flex<typeof CasinoStrip>;
  casinoStripPop?: p.Flex<typeof CasinoStripPop>;
  text?: p.Flex<"div">;
  img?: p.Flex<typeof p.PlasmicImg>;
};

export interface DefaultHomepageProps {}

function PlasmicHomepage__RenderFunc(props: {
  variants: PlasmicHomepage__VariantsArgs;
  args: PlasmicHomepage__ArgsType;
  overrides: PlasmicHomepage__OverridesType;

  forNode?: string;
}) {
  const { variants, overrides, forNode } = props;

  const $ctx = ph.useDataEnv?.() || {};
  const args = Object.assign(
    {},

    props.args
  );
  const $props = args;

  const globalVariants = ensureGlobalVariants({
    screen: useScreenVariantsnwCq1TNqK1ZjKa()
  });

  return (
    <React.Fragment>
      {}

      <style>{`
        body {
          margin: 0;
        }
      `}</style>

      <div className={projectcss.plasmic_page_wrapper}>
        {true ? (
          <div
            data-plasmic-name={"root"}
            data-plasmic-override={overrides.root}
            data-plasmic-root={true}
            data-plasmic-for-node={forNode}
            className={classNames(
              projectcss.all,
              projectcss.root_reset,
              projectcss.plasmic_default_styles,
              projectcss.plasmic_mixins,
              sty.root
            )}
          >
            <CasinoStrip
              data-plasmic-name={"casinoStrip"}
              data-plasmic-override={overrides.casinoStrip}
              _247OnlineAssistance2={p.renderPlasmicSlot({
                defaultContents: (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__qY5R
                    )}
                  >
                    {"24/7 Online assistance"}
                  </div>
                ),

                value: args._247OnlineAssistance2
              })}
              _247OnlineAssistance4={p.renderPlasmicSlot({
                defaultContents: (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__z8IhA
                    )}
                  >
                    {"Online assistance"}
                  </div>
                ),

                value: args._247OnlineAssistance4
              })}
              _247OnlineAssistance6={p.renderPlasmicSlot({
                defaultContents: (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__xavCo
                    )}
                  >
                    {"Online assistance"}
                  </div>
                ),

                value: args._247OnlineAssistance6
              })}
              className={classNames("__wab_instance", sty.casinoStrip)}
              slot={p.renderPlasmicSlot({
                defaultContents: "no deposit BONUS",
                value: args.slot
              })}
              slot2={p.renderPlasmicSlot({
                defaultContents: (
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__vx1)}
                    displayHeight={"26px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"26px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/copy_of_copy_of_cbn_components/images/flagHolder.svg",
                      fullWidth: 26,
                      fullHeight: 26,
                      aspectRatio: 1
                    }}
                  />
                ),

                value: args.slot2
              })}
              slot20={p.renderPlasmicSlot({
                defaultContents: "4.8",
                value: args.slot20
              })}
              slot21={p.renderPlasmicSlot({
                defaultContents: "Full Review",
                value: args.slot21
              })}
              slot22={
                true
                  ? p.renderPlasmicSlot({
                      defaultContents: "Ozwin Casino - Review",
                      value: args.slot22
                    })
                  : null
              }
              slot3={p.renderPlasmicSlot({
                defaultContents: "400% up to",
                value: args.bonusLine1
              })}
              slot4={p.renderPlasmicSlot({
                defaultContents: "$4,000",
                value: args.bonusLine2
              })}
              slot5={p.renderPlasmicSlot({
                defaultContents: "+ 100 Free Spins",
                value: args.bonusLine3
              })}
              slot6={p.renderPlasmicSlot({
                defaultContents: "on Cleopatraâ€™s Gold",
                value: args.bonusLine4
              })}
              slot7={p.renderPlasmicSlot({
                defaultContents: "Deposit Options",
                value: args.slot7
              })}
              slot8={p.renderPlasmicSlot({
                defaultContents: (
                  <p.Stack
                    as={p.PlasmicImg}
                    hasGap={true}
                    alt={""}
                    className={classNames(sty.img__slJwd)}
                    displayHeight={"9.844px" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"30.359px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/copy_of_copy_of_cbn_components/images/frame1889.svg",
                      fullWidth: 30.359,
                      fullHeight: 9.844,
                      aspectRatio: 3.1
                    }}
                  />
                ),

                value: args.slot8
              })}
            >
              {p.renderPlasmicSlot({
                defaultContents: "PLAY",
                value: args.children
              })}
            </CasinoStrip>

            <CasinoStripPop
              data-plasmic-name={"casinoStripPop"}
              data-plasmic-override={overrides.casinoStripPop}
              bonusCode={p.renderPlasmicSlot({
                defaultContents: "BONUSCODE#",
                value: args.bonusCode
              })}
              bonusInfo={p.renderPlasmicSlot({
                defaultContents: (
                  <div
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text__dsQad
                    )}
                  >
                    {
                      "Vivamus porta id nunc eget ultrices. Fusce congue diam a quam porttitor ornare. Donec molestie lacinia mi quis ultrices. Nam non dolor consectetur, auctor orci nec egestas erat. In justo velit, placerat nec varius eget..."
                    }
                  </div>
                ),

                value: args.bonusInfo
              })}
              casinoInfo={
                (hasVariant(globalVariants, "screen", "_1044") ? true : true)
                  ? p.renderPlasmicSlot({
                      defaultContents: (
                        <div
                          className={classNames(
                            projectcss.all,
                            projectcss.__wab_text,
                            sty.text__eqghF
                          )}
                        >
                          {
                            "Vivamus porta id nunc eget ultrices. Fusce congue diam a quam porttitor ornare. Donec molestie lacinia mi quis ultrices. Nam non dolor consectetur, auctor orci nec, egestas erat. In justo velit, placerat nec varius eget..."
                          }
                        </div>
                      ),

                      value: args.casinoInfo
                    })
                  : null
              }
              className={classNames("__wab_instance", sty.casinoStripPop)}
              gameType={p.renderPlasmicSlot({
                defaultContents: "Slots",
                value: args.gameType
              })}
              gameType2={p.renderPlasmicSlot({
                defaultContents: "Slots",
                value: args.gameType2
              })}
              gameType3={p.renderPlasmicSlot({
                defaultContents: "Slots",
                value: args.gameType3
              })}
              gameType4={p.renderPlasmicSlot({
                defaultContents: "Slots",
                value: args.gameType4
              })}
              gameTypePic={p.renderPlasmicSlot({
                defaultContents: (
                  <Frame1593Icon
                    className={classNames(projectcss.all, sty.svg__jH8Q)}
                    role={"img"}
                  />
                ),

                value: args.gameTypePic
              })}
              gameTypePic2={p.renderPlasmicSlot({
                defaultContents: (
                  <Frame1593Icon
                    className={classNames(projectcss.all, sty.svg__zQbLm)}
                    role={"img"}
                  />
                ),

                value: args.gameTypePic2
              })}
              gameTypePic3={p.renderPlasmicSlot({
                defaultContents: (
                  <Frame1593Icon
                    className={classNames(projectcss.all, sty.svg__sf5Om)}
                    role={"img"}
                  />
                ),

                value: args.gameTypePic3
              })}
              gameTypePic4={p.renderPlasmicSlot({
                defaultContents: (
                  <Frame1593Icon
                    className={classNames(projectcss.all, sty.svg__qa4Y)}
                    role={"img"}
                  />
                ),

                value: args.gameTypePic4
              })}
              maxCash={p.renderPlasmicSlot({
                defaultContents: "$60",
                value: args.maxCash
              })}
              playnowBtn={p.renderPlasmicSlot({
                defaultContents: "PLay Now",
                value: args.playnowBtn
              })}
              providerLogo={p.renderPlasmicSlot({
                defaultContents: (
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__zJ7Ut)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/copy_of_copy_of_cbn_components/images/image.png",
                      fullWidth: 617,
                      fullHeight: 110,
                      aspectRatio: undefined
                    }}
                  />
                ),

                value: args.providerLogo
              })}
              providerLogo2={p.renderPlasmicSlot({
                defaultContents: (
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__vLmSs)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/copy_of_copy_of_cbn_components/images/image.png",
                      fullWidth: 617,
                      fullHeight: 110,
                      aspectRatio: undefined
                    }}
                  />
                ),

                value: args.providerLogo2
              })}
              providerLogo3={p.renderPlasmicSlot({
                defaultContents: (
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img___990Zx)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/copy_of_copy_of_cbn_components/images/image.png",
                      fullWidth: 617,
                      fullHeight: 110,
                      aspectRatio: undefined
                    }}
                  />
                ),

                value: args.providerLogo3
              })}
              providerLogo4={p.renderPlasmicSlot({
                defaultContents: (
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__wlKpA)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/copy_of_copy_of_cbn_components/images/image.png",
                      fullWidth: 617,
                      fullHeight: 110,
                      aspectRatio: undefined
                    }}
                  />
                ),

                value: args.providerLogo4
              })}
              providerLogo5={p.renderPlasmicSlot({
                defaultContents: (
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__lw8Ig)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/copy_of_copy_of_cbn_components/images/image.png",
                      fullWidth: 617,
                      fullHeight: 110,
                      aspectRatio: undefined
                    }}
                  />
                ),

                value: args.providerLogo5
              })}
              providerLogo6={p.renderPlasmicSlot({
                defaultContents: (
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__u7M7G)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/copy_of_copy_of_cbn_components/images/image.png",
                      fullWidth: 617,
                      fullHeight: 110,
                      aspectRatio: undefined
                    }}
                  />
                ),

                value: args.providerLogo6
              })}
              providerLogo7={p.renderPlasmicSlot({
                defaultContents: (
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__ao7Gx)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/copy_of_copy_of_cbn_components/images/image.png",
                      fullWidth: 617,
                      fullHeight: 110,
                      aspectRatio: undefined
                    }}
                  />
                ),

                value: args.providerLogo7
              })}
              providerLogo8={p.renderPlasmicSlot({
                defaultContents: (
                  <p.PlasmicImg
                    alt={""}
                    className={classNames(sty.img__tcBeC)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"auto" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/copy_of_copy_of_cbn_components/images/image.png",
                      fullWidth: 617,
                      fullHeight: 110,
                      aspectRatio: undefined
                    }}
                  />
                ),

                value: args.providerLogo8
              })}
              slot7={
                (hasVariant(globalVariants, "screen", "_992") ? true : true) ? (
                  <div
                    data-plasmic-name={"text"}
                    data-plasmic-override={overrides.text}
                    className={classNames(
                      projectcss.all,
                      projectcss.__wab_text,
                      sty.text
                    )}
                  >
                    {"Deposit Options"}
                  </div>
                ) : null
              }
              slot8={
                (hasVariant(globalVariants, "screen", "_992") ? true : true) ? (
                  <p.Stack
                    as={p.PlasmicImg}
                    data-plasmic-name={"img"}
                    data-plasmic-override={overrides.img}
                    hasGap={true}
                    alt={""}
                    className={classNames(sty.img)}
                    displayHeight={"auto" as const}
                    displayMaxHeight={"none" as const}
                    displayMaxWidth={"100%" as const}
                    displayMinHeight={"0" as const}
                    displayMinWidth={"0" as const}
                    displayWidth={"30.359px" as const}
                    loading={"lazy" as const}
                    src={{
                      src: "/plasmic/copy_of_copy_of_cbn_components/images/frame1889.svg",
                      fullWidth: 30.359,
                      fullHeight: 9.844,
                      aspectRatio: 3.1
                    }}
                  />
                ) : null
              }
              wager={p.renderPlasmicSlot({
                defaultContents: "X40",
                value: args.wager
              })}
            />
          </div>
        ) : null}
      </div>
    </React.Fragment>
  ) as React.ReactElement | null;
}

const PlasmicDescendants = {
  root: ["root", "casinoStrip", "casinoStripPop", "text", "img"],
  casinoStrip: ["casinoStrip"],
  casinoStripPop: ["casinoStripPop", "text", "img"],
  text: ["text"],
  img: ["img"]
} as const;
type NodeNameType = keyof typeof PlasmicDescendants;
type DescendantsType<T extends NodeNameType> =
  typeof PlasmicDescendants[T][number];
type NodeDefaultElementType = {
  root: "div";
  casinoStrip: typeof CasinoStrip;
  casinoStripPop: typeof CasinoStripPop;
  text: "div";
  img: typeof p.PlasmicImg;
};

type ReservedPropsType = "variants" | "args" | "overrides";
type NodeOverridesType<T extends NodeNameType> = Pick<
  PlasmicHomepage__OverridesType,
  DescendantsType<T>
>;
type NodeComponentProps<T extends NodeNameType> =
  // Explicitly specify variants, args, and overrides as objects
  {
    variants?: PlasmicHomepage__VariantsArgs;
    args?: PlasmicHomepage__ArgsType;
    overrides?: NodeOverridesType<T>;
  } & Omit<PlasmicHomepage__VariantsArgs, ReservedPropsType> & // Specify variants directly as props
    // Specify args directly as props
    Omit<PlasmicHomepage__ArgsType, ReservedPropsType> &
    // Specify overrides for each element directly as props
    Omit<
      NodeOverridesType<T>,
      ReservedPropsType | VariantPropType | ArgPropType
    > &
    // Specify props for the root element
    Omit<
      Partial<React.ComponentProps<NodeDefaultElementType[T]>>,
      ReservedPropsType | VariantPropType | ArgPropType | DescendantsType<T>
    >;

function makeNodeComponent<NodeName extends NodeNameType>(nodeName: NodeName) {
  type PropsType = NodeComponentProps<NodeName> & { key?: React.Key };
  const func = function <T extends PropsType>(
    props: T & StrictProps<T, PropsType>
  ) {
    const { variants, args, overrides } = deriveRenderOpts(props, {
      name: nodeName,
      descendantNames: [...PlasmicDescendants[nodeName]],
      internalArgPropNames: PlasmicHomepage__ArgProps,
      internalVariantPropNames: PlasmicHomepage__VariantProps
    });

    return PlasmicHomepage__RenderFunc({
      variants,
      args,
      overrides,
      forNode: nodeName
    });
  };
  if (nodeName === "root") {
    func.displayName = "PlasmicHomepage";
  } else {
    func.displayName = `PlasmicHomepage.${nodeName}`;
  }
  return func;
}

export const PlasmicHomepage = Object.assign(
  // Top-level PlasmicHomepage renders the root element
  makeNodeComponent("root"),
  {
    // Helper components rendering sub-elements
    casinoStrip: makeNodeComponent("casinoStrip"),
    casinoStripPop: makeNodeComponent("casinoStripPop"),
    text: makeNodeComponent("text"),
    img: makeNodeComponent("img"),

    // Metadata about props expected for PlasmicHomepage
    internalVariantProps: PlasmicHomepage__VariantProps,
    internalArgProps: PlasmicHomepage__ArgProps
  }
);

export default PlasmicHomepage;
/* prettier-ignore-end */
